@model MVC_NorthWind.Models.Employees

@{
    ViewBag.Title = "Registro Empleados";
}
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">

    <style>
        .card {
            margin: 3em;
            width: auto;
        }
    </style>
</head>

@using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <body>
        <div class="card container shadow p-3 mb-5">
            <h2 align="center">Formulario de Registro de Empleados</h2>
            <form>
                <div class="row section">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.TitleOfCourtesy, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.TitleOfCourtesy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TitleOfCourtesy, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Extension, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Extension, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Extension, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
                        <input class="form-control" type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.ReportsTo, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.ReportsTo, null, htmlAttributes: new { @class = "form-control selectpicker", data_show_subtext = "true", data_live_search = "true"  })
                        @Html.ValidationMessageFor(model => model.ReportsTo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-12" style="margin-left:30em; margin-top: 2em; margin-bottom: 2em">
                        <input type="submit" value="Agregar" class="btn btn-primary" />
                    </div>
                </div>
            </form>
        </div>
        <div class="btn btn-outline-primary">
            @Html.ActionLink("Atras", "Index")
        </div>
    </body>

}
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")

}
